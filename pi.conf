@version: 3.141592647

#start in foreground: syslog-ng -F
#enter the following: i=1 pi=3G\n

log {
	source  { unix-stream("/tmp/loop" flags(no-parse));
                  stdin(flags(no-parse));
        };
        parser  { kv-parser(); };

        junction {
          channel {
            filter { "${direction}" == "+1" };
            rewrite { set("-1" value("direction")); };
            flags(final);
          };
          channel {
            filter { "${direction}" == "-1" };
            rewrite { set("+1" value("direction")); };
            flags(final);
          };
          channel {
            filter { "${i}" == "1" };
            rewrite { set("+1" value("direction")); };
            flags(final);
          };
        };

        rewrite { set("$(+ ${i} 2)" value("i")); };

        rewrite { set("$(+ ${i} 1)" value("i_p1")); };
        rewrite { set("$(- ${i} 1)" value("i_m1")); };
        rewrite { set("$(* ${i_p1} ${i_m1})" value("nev1")); };
        rewrite { set("$(* ${nev1} ${i})" value("nev")); };
        rewrite { set("$(/ 4G ${nev})" value("abs_divereged")); };

        rewrite { set("$(* ${direction} ${abs_divereged})" value("divereged")); };

        rewrite { set("$(+ ${pi} ${divereged})" value("pi")); };
        rewrite { set("$(* ${pi} 4)" value("final_pi")); };
      
 
        filter  { "${i}" < "1000"; };

	destination { file("/dev/stdout" template("iteration=${i} pi~${pi}\n"));
	              #file("/dev/stdout" template("$(format-welf --scope nv-pairs)\n")); #debug option
	              unix-stream("/tmp/loop" template("$(format-welf --scope nv-pairs)\n")); };
};


