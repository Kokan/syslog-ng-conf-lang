@version: 3.25

#
# It is possible to build a new plugin based on configuration only with the block syntaxt.
# Despite the block could have parameters, those values are always just implaced, and ther is 
# no way to check their value and do operation A or operation B.
# Well at least not during config parsing time, with runtime penalty of course using the 
# if { } else {} construct that is possible.
#

block parser parse(name()) {
  channel {
    rewrite { set("parse-`name`" value(".parser")); };
  };
};


# With if {} else {} runtime condition.
# There is an if-parser.png showing the graph created from this version.

block parser if-based-parser( do-parse-a(yes) )
{
 channel {
   if ("`do-parse-a`" == "yes") {
     parse(name("A"));
   }
   else {
     parse(name("B"));
   };
 };
};

# Without runtime penalty.
# There is an ifless.png showing the graph created from this version.

block parser parse-do-parse-a-yes()
{
  parse(name("A"));
};

block parser parse-do-parse-a-no()
{
 # <SKIP,S> = S
 channel {};
};

block parser ifless-parser( do-parse-a(yes) )
{
  parse-do-parse-a-`do-parse-a`();
};


log {
	source { example-msg-generator(num(1)); };
	
	parser { if-based-parser( do-parse-a(no) ); };
	parser { ifless-parser( do-parse-a(no) ); };
	
	destination { file("/dev/stdout" template("parser: ${.parser}\n")); };
};

