@version: 3.21
@include "scl.conf"

@define loop-socket-path "/tmp/state.sock"

options { time-reopen(5); };

python {
import time

class Wait(object):
  def parse(self, log_message):
    time.sleep(1)
    return True

};

block parser sleep()
{
   python( class(Wait) );  
};

block source state()
{
   channel {
     source { unix-stream("/tmp/state.sock" flags(no-parse)); };
     parser { syslog-parser(flags(syslog-protocol)); }; # For some reason this is needed for ewmm-parser()
     parser { ewmm-parser(); };
   }
};

log {
  source { stdin(flags(no-parse)); };
  source { state(); };

  parser { kv-parser(prefix(".")); };

  parser {
    grouping-by(
       key("")
       aggregate(
         value(".pass-throu" "1")
       )

       trigger( match("1", value(".input")) )
       timeout(9999999) #hopefully never
    );
  };

  filter { match("1" value(".pass-throu")); };
  rewrite { set("0" value(".pass-throu")); };
  rewrite { set("0" value(".input")); };
  rewrite { set("" value("MESSAGE")); };


  destination { file("/dev/stdout" template("$(format-ewmm)")); };
  destination { unix-stream("/tmp/state.sock" template("$(format-ewmm)")); };
};
